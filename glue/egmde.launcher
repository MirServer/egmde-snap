#!/bin/bash
set -e

# For a classic snap this needs to be something sane
XDG_RUNTIME_DIR=/run/user/$(id -u)

# If there's an existing Wayland server, we're likely on a Wayland desktop
if [ -n "$WAYLAND_DISPLAY" ] && [ -e "$XDG_RUNTIME_DIR/$WAYLAND_DISPLAY" ]
then
  # Allow egmde to select an uncontested WAYLAND_DISPLAY
  unset WAYLAND_DISPLAY
fi

config_dir=${XDG_CONFIG_HOME:-$HOME/.config}
if [[ ! -e "$config_dir" ]]
then
  mkdir -p "$config_dir"
fi

config_file=$config_dir/egmde.config

# Usage: config_entry <key> <value> <doc comment>
# Checks to see if there's an existing config entry for key (possibly commented out) and,
# if not, adds the key (possibly commented out), value and prefixes the doc comment.
config_entry() {
  if ! grep -q "^[# ]*${1##?[#\ ]}=" "${config_file}"; then
    cat <<EOT >> "${config_file}"

# $3
$1=${2}
EOT
  fi
}

# Set the background according to host color scheme
if [ "$(sed -Ene 's/^ID=(.*)/\1/p' /etc/os-release)" = "fedora" ]; then
  wallpaper_bottom=0x25487c
else
  wallpaper_bottom=0x92006a
fi

# Try copying GNOME background
background=$(gsettings get org.gnome.desktop.background picture-uri | sed -Ee "s|[^:]*://(.*\.png)'$|\1|")
if [[ ! -e "${background}" ]]; then
  # fall back to Ubuntu default
  background="/usr/share/backgrounds/warty-final-ubuntu.png"
fi

if [ ! -e "${config_file}" ]; then
cat <<EOT > "${config_file}"
# Configuration file for egmde
# ============================ 
# The following entries may be edited (or commented in or out) to adjust the
# desktop environment. If they are removed, then defaults will be 
# automatically restored.
EOT
fi

snap="/snap/egmde/current"

config_entry "wallpaper-top"      "0x000000"                  "Color used by the default egmde background"
config_entry "wallpaper-bottom"   "$wallpaper_bottom"         "Color used by the default egmde background"

config_entry "enable-x11"         ""                          "Setup support for X11 apps (comment out to disable)"
config_entry "xwayland-path"      "$snap/usr/bin/Xwayland"    "Path to the Xwayland binary"

config_entry "# no-of-workspaces" "4"                         "Uncomment this to enable workspaces"

config_entry "shell-components"   "$snap/bin/swaybg.launcher:$snap/bin/waybar.launcher" "Adds the snapped swaybg and waybar to the desktop environment"
config_entry "# swaybg.image"     "${background}"             "Uncomment this to set a background image for swaybg.launcher"


qtwayland_check=$SNAP_USER_COMMON/.qtwayland_check
if [[ ! -e "$qtwayland_check" ]]; then
  if ! grep -q ^app-env-amend= ~/.config/egmde.config; then
    if [ "$(sed -Ene 's/^VERSION_CODENAME=(.*)/\1/p' /etc/os-release)" == "xenial" ]; then
      echo "" >> "$config_file"
      echo "# The Wayland support in the version of GTK, Qt and other toolkits from" >> "$config_file"
      echo "# the 16.04 archive is poor, so we’ll instruct them use X11 via Xwayland." >> "$config_file"
      echo "app-env-amend=GDK_BACKEND=x11:QT_QPA_PLATFORM=xcb:SDL_VIDEODRIVER=x11" >> "$config_file"
    elif ! find /usr/lib/ /usr/lib64/ -name libqwayland-egl.so | grep -q .; then
      echo "" >> "$config_file"
      echo "# Qt's Wayland platform isn't found, instruct Qt to use X11" >> "$config_file"
      echo "app-env-amend=QT_QPA_PLATFORM=xcb" >> "$config_file"
    fi
  fi
  touch "$qtwayland_check"
fi

if [[ ! -e "$config_dir/waybar/config" ]]
then
  mkdir -p $config_dir/waybar
  cat > $config_dir/waybar/config <<EOF
{
    "layer": "bottom", // Waybar at top layer
    "height": 30, // Waybar height (to be removed for auto height)
    "modules-left": ["network"],
    "modules-center": ["clock"],
    "modules-right": ["cpu", "memory", "temperature", "battery"],
    "tray": {
        // "icon-size": 21,
        "spacing": 10
    },
    "clock": {
        "format": "{:%y-%m-%d %H:%M}",
        "tooltip-format": "{:%y-%m-%d | %H:%M}",
        "format-alt": "{:%H:%M}"
    },
    "cpu": {
        "format": "CPU: {usage}%",
        "tooltip": false
    },
    "memory": {
        "format": "Mem: {}%"
    },
    "temperature": {
        // "thermal-zone": 2,
        // "hwmon-path": "/sys/class/hwmon/hwmon2/temp1_input",
        "critical-threshold": 80,
        // "format-critical": "{temperatureC}°C {icon}",
        "format": "{temperatureC}°C",
        "format-icons": ["", "", ""]
    },
    "battery": {
        "states": {
            // "good": 95,
            "warning": 30,
            "critical": 15
        },
        "format-alt": "{capacity}% {icon}",
        "format-charging": "{capacity}% ",
        "format-plugged": "{capacity}% ",
        "format": "{time} ({capacity}%)",
        // "format-good": "", // An empty format will hide the module
        // "format-full": "",
        "format-icons": ["", "", "", "", ""]
    },
    "network": {
        // "interface": "wlp2*", // (Optional) To force the use of this interface
        "format-wifi": "{essid} ({signalStrength}%)",
        "format-ethernet": "{ifname}: {ipaddr}/{cidr} ",
        "format-linked": "{ifname} (No IP) ",
        "format-disconnected": "Disconnected ⚠",
        "format-alt": "{ifname}: {ipaddr}/{cidr}"
    }
}
EOF
fi

if [[ ! -e "$config_dir/waybar/style.css" ]]
then
  mkdir -p $config_dir/waybar
  cat > $config_dir/waybar/style.css <<EOF
* {
    border: none;
    border-radius: 0;
    /* 'otf-font-awesome' is required to be installed for icons */
    font-family: Ubuntu, FreeSans, Arial, sans-serif;
    font-size: 13px;
    min-height: 0;
}

window#waybar {
    /*background-color: rgba(43, 48, 59, 0.5);
    border-bottom: 3px solid rgba(100, 114, 125, 0.5);*/
    background-color: rgba(146, 0, 106, 0.3);
    border-bottom: 3px solid rgba(73, 0, 53, 0.3);
    color: #ffffff;
    transition-property: background-color;
    transition-duration: .5s;
}

window#waybar.hidden {
    opacity: 0.2;
}

window#waybar.termite {
    background-color: #3F3F3F;
}

window#waybar.chromium {
    background-color: #000000;
    border: none;
}

#mode {
    background-color: #64727D;
    border-bottom: 3px solid #ffffff;
}

#clock,
#battery,
#cpu,
#memory,
#temperature,
#backlight,
#network,
#pulseaudio,
#custom-media,
#tray,
#mode,
#idle_inhibitor,
#mpd {
    padding: 0 10px;
    margin: 0 4px;
    color: #ffffff;
}

#clock {
    background-color: #64727D;
}

#battery {
    background-color: #ffffff;
    color: #000000;
}

#battery.charging {
    color: #ffffff;
    background-color: #26A65B;
}

@keyframes blink {
    to {
        background-color: #ffffff;
        color: #000000;
    }
}

#battery.critical:not(.charging) {
    background-color: #f53c3c;
    color: #ffffff;
    animation-name: blink;
    animation-duration: 0.5s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    animation-direction: alternate;
}

label:focus {
    background-color: #000000;
}

#cpu {
    background-color: #2ecc71;
    color: #000000;
}

#memory {
    background-color: #9b59b6;
}

#backlight {
    background-color: #90b1b1;
}

#network {
    background-color: #2980b9;
}

#network.disconnected {
    background-color: #f53c3c;
}

#temperature {
    background-color: #f0932b;
}

#temperature.critical {
    background-color: #eb4d4b;
}

#tray {
    background-color: #2980b9;
}
EOF
fi

# Run server
exec "$SNAP/usr/local/bin/egmde" "$@"
